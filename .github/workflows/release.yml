name: Build & Release Glipper

on:
    push:
        branches:
            - main

jobs:
    build-and-release:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]

        steps:
            - name: Check out Git repository
              uses: actions/checkout@v3

            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 20

            - name: Install Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.10'
                  cache: 'pip'

            - name: Install Dependencies
              run: |
                  pip install setuptools
                  npm install -g pnpm
                  pnpm install
                  pnpm run prisma:generate

            - name: build-linux
              if: matrix.os == 'ubuntu-latest'
              run: npm run build:linux

            - name: build-mac
              if: matrix.os == 'macos-latest'
              run: npm run build:mac

            - name: build-win
              if: matrix.os == 'windows-latest'
              run: npm run build:win

            - name: Get version from package.json
              id: get_version
              run: echo "::set-output name=VERSION::$(node -p "require('./package.json').version")"

            - name: Create GitHub release
              uses: softprops/action-gh-release@v1
              with:
                  draft: true
                  tag_name: 'v${{ steps.get_version.outputs.VERSION }}'
                  name: 'Release v${{ steps.get_version.outputs.VERSION }}'
                  files: |
                      dist/*.exe
                      dist/*.zip
                      dist/*.dmg
                      dist/*.AppImage
                      dist/*.snap
                      dist/*.deb
                      dist/*.rpm
                      dist/*.tar.gz
                      dist/*.yml
                      dist/*.blockmap
              env:
                  GITHUB_TOKEN: ${{ secrets.PUSH_RELEASE_TOKEN }}
